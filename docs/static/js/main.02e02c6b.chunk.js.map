{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchgifs.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loanding","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAEaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAgB9C,OACI,0BAAMC,SAVW,SAAAC,GACjBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAE3BR,GAAc,SAAAS,GAAG,OAAKP,GAAL,mBAAmBO,OACpCN,EAAc,OAOd,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAnBa,SAAAP,GACrBF,EAAcE,EAAEQ,OAAOF,Y,uBCNlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAaVM,GAbU,4CAAH,sDCEPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEjC,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCFHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECFb,SAACA,GAAc,IAAD,EACZd,mBAAS,CAC/BqB,KAAM,GACNa,UAAU,IAHwB,mBAC/BC,EAD+B,KACxBC,EADwB,KActC,OATAC,qBAAU,WACNxB,EAAQC,GAAUwB,MAAK,SAAAC,GACnBH,EAAS,CACLf,KAAMkB,EACNL,UAAU,SAGnB,CAACpB,IAEGqB,EDV4BK,CAAa1B,GAAlCa,EAFuB,EAE7BN,KAAca,EAFe,EAEfA,SAGtB,OACI,oCACI,4BAAKpB,GACJoB,GAAY,wCACb,yBAAKJ,UAAU,aAGPH,EAAOJ,KAAI,SAACC,GAAD,OACP,kBAAC,EAAD,eACIiB,IAAKjB,EAAIC,IACLD,UEhBnBkB,EAAe,WAAO,IAAD,EAEM1C,mBAAS,CAAC,kBAFhB,mBAEvB2C,EAFuB,KAEX5C,EAFW,KAK9B,OAEI,oCAEI,4CAEA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BAEQ4C,EAAWpB,KAAI,SAAAf,GAAG,OACd,kBAAC,EAAD,CAASM,SAAUN,EAAKiC,IAAKjC,UChBrDoC,IAASC,OAEP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.02e02c6b.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n    const handleInputValue = e => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 2) {\r\n\r\n            setCategories(cat => [inputValue,...cat ]);\r\n            setInputValue('');\r\n        }\r\n\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputValue}\r\n            />\r\n        </form >\r\n    )\r\n}\r\nAddCategory.propTypes={\r\n    setCategories:PropTypes.func.isRequired\r\n}","export const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=n9LiNIc2YvwMoYhPOpPBnT31Ee5XA1Dl`\r\n    const resp = await fetch(url);\r\n\r\n    const { data } = await resp.json();\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n      return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n\r\n    return (\r\n        <div className='card animate__animated animate__fadeIn'>\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchgifs'\r\nimport { GifGridItem } from './GifGridItem'\r\n\r\n\r\nexport const GifGrid = ({ category }) => {\r\n    // hook personalizado\r\n    const { data: images, loanding } = useFetchGifs(category)\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n            {loanding && <p> cargando</p>}\r\n            <div className='card-grid'>\r\n\r\n                {\r\n                    images.map((img) => (\r\n                        <GifGridItem\r\n                            key={img.id}\r\n                            {...img}\r\n                        />\r\n                    ))\r\n                }\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loanding: true\r\n    });\r\n    useEffect(() => {\r\n        getGifs(category).then(imgs => {\r\n            setState({\r\n                data: imgs,\r\n                loanding: false\r\n            })\r\n        })\r\n    }, [category])\r\n\r\n    return state;\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './AddCategory'\r\nimport { GifGrid } from './GifGrid'\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One punch Man'])\r\n\r\n\r\n    return (\r\n\r\n        <>\r\n\r\n            <h2>GifExpertApp</h2>\r\n            {/* input */}\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map(cat =>\r\n                        <GifGrid category={cat} key={cat} />\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { GifExpertApp } from './components/GifExpertApp';\r\n\r\nReactDOM.render(\r\n\r\n  <GifExpertApp/>,\r\n  document.getElementById('root')\r\n);\r\n\r\n \r\n"],"sourceRoot":""}